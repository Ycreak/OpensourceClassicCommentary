
    <!-- Section for the multiplayer (done using Google Firebase) -->
    <div class="container-fluid" *ngIf="toggle_multiplayer">
        <div class="row">
            <!-- Field to select the author. Beware! It changes the author of the entire program -->
            <div mat-dialog-content>
                <mat-form-field>
                    <mat-label>Select author</mat-label>
                    <mat-select>
                    <mat-option *ngFor="let author of this.retrieved_authors" [value]="author" 
                        (click)="this.RequestBooks(author.name)">
                        {{ author.name }} 
                    </mat-option>
                    </mat-select>  
                </mat-form-field> 
                <!-- Field to select the corresponding book -->
                <mat-form-field>
                    <mat-label>Select text</mat-label>
                    <mat-select>
                    <mat-option *ngFor="let book of this.retrieved_books" [value]="book" 
                        (click)="RequestEditors(book.title)">
                        {{ book.title }}                
                    </mat-option>
                    </mat-select>
                </mat-form-field> 
            </div>
            <!-- Possibility to select an editor base text -->
            <mat-form-field class="select-form">
                <mat-label>Editor</mat-label>
                <mat-select [(ngModel)]="selectedEditor">
                <mat-option *ngFor="let data of this.retrieved_editors" [value]="data"
                (click)="this.SetCurrentEditorData(data.name)"
                (click)="this.multiplayer.list3Array = CreateEditorArray(data, this.F_Fragments)"
                (click)="this.multiplayer.FirebaseTest(data.name)">
                    {{ data.name }}                       
                </mat-option>
                </mat-select>
                <mat-hint>Select an editor to use</mat-hint>
            </mat-form-field>
            <!-- Possibility to create one's own fragment -->
            <div mat-dialog-content>
                <mat-form-field class="input-form-wide">
                    <input class="input-form-wide" matInput type="text" [(ngModel)]='fragment2Header' [matKeyboard]="'OSCC'">
                    <mat-hint>Add custom header</mat-hint>
                </mat-form-field>               
            </div> 
            <div mat-dialog-content>
                <mat-form-field class="input-form-wide">
                    <input class="input-form-wide" matInput type="text" [(ngModel)]='fragment2' [matKeyboard]="'OSCC'">
                        <button type="button" mat-icon-button matSuffix (click)="this.multiplayer.list4Array = this.utility.CreateOwnFragment(fragment2, fragment2Header, this.multiplayer.list4Array, false)">
                            <mat-icon>{{'text_snippet'}}</mat-icon>
                        </button>
                        <button type="button" mat-icon-button matSuffix (click)="this.multiplayer.list4Array = this.utility.CreateOwnFragment(fragment2, fragment2Header, this.multiplayer.list4Array, true)">
                            <mat-icon>{{'note_add'}}</mat-icon>
                        </button>
                    <mat-hint>Add custom body</mat-hint>
                </mat-form-field>               
            </div> 
            <!-- Possibility to restore and create sessions -->
            <div mat-dialog-content>
                <mat-form-field class="input-form-wide">
                    <input class="input-form-wide" matInput type="text" [(ngModel)]='this.multiplayer.sessionCode' [matKeyboard]="'OSCC'">
                    <button type="button" mat-icon-button matSuffix (click)="this.multiplayer.RestoreFirebaseSession(this.multiplayer.sessionCode)">
                        <mat-icon>{{'restore'}}</mat-icon>
                    </button>
                    <button type="button" mat-icon-button matSuffix (click)="this.multiplayer.CreateFirebaseSession(this.multiplayer.tableName)">
                        <mat-icon>{{'add'}}</mat-icon>
                    </button>
                    <button type="button" mat-icon-button matSuffix (click)="this.multiplayer.RequestDeleteSession(this.multiplayer.sessionCode)">
                        <mat-icon>{{'remove'}}</mat-icon>
                    </button>
                    <mat-hint>Provide your session code</mat-hint>
                </mat-form-field>               
            </div> 

            <mat-checkbox [(ngModel)]="this.multiplayer.showFragmentname">Headers</mat-checkbox>

        </div>

        <hr>
        <!-- Row to show the commentaries. List1 and List2 are synced with the server.
        List3 shows the selected existing edition, List4 one's own comments. -->
        <div class="row">
            <div class="col-md-4">
                <div class="multiplayer-container">
                    <h3>Synced Column 1</h3>
                    <div
                        cdkDropList
                        #list1="cdkDropList"
                        [cdkDropListData]="this.multiplayer.list1Array"
                        [cdkDropListConnectedTo]="[list2, list3, list4, list5, list6]"
                        class="multiplayer-list"
                        (cdkDropListDropped)="this.multiplayer.MultipleColumnsDrag($event)">
                        <div class="fragment-box" *ngFor="let item of this.multiplayer.list1Array" cdkDrag>                          
                            <div class="divNote" *ngIf="item.note"> <!--If it is a note, don't show frg-->
                                <b>{{item.fragmentName}}</b>
                            </div>
                            <div *ngIf="item.note != true && this.multiplayer.showFragmentname">
                                <b>Frg {{item.fragmentName}}</b> &nbsp; <sup>{{item.author}}, {{item.text}}, {{item.editor}}</sup> &nbsp; <i>{{item.status}}</i>
                            </div>
                            <div *ngFor="let item2 of item.content"> 
                                <!-- Keep in mind whether a note is printed or not. -->
                                <div class="divNote" *ngIf="item.note" [innerHTML]="item2.lineComplete"></div> 
                                <div *ngIf="item.note != true" [innerHTML]="item2.lineComplete"></div> 
                            </div>  
                        </div>  
                    </div>
                </div>
            </div>
           <!-- The second list to be synced -->
            <div class="col-md-4">          
                <div class="multiplayer-container">
                    <h3> Synced Column 2</h3>
                    <div
                        cdkDropList
                        #list2="cdkDropList"
                        [cdkDropListData]="this.multiplayer.list2Array"
                        [cdkDropListConnectedTo]="[list1, list3, list4, list5, list6]"
                        class="multiplayer-list"
                        (cdkDropListDropped)="this.multiplayer.MultipleColumnsDrag($event)">
                        <div class="fragment-box" *ngFor="let item of this.multiplayer.list2Array" cdkDrag>                          
                            <div class="divNote" *ngIf="item.note"> <!--If it is a note, don't show frg-->
                                <b>{{item.fragmentName}}</b>
                            </div>
                            <div *ngIf="item.note != true && this.multiplayer.showFragmentname">
                                <b>Frg {{item.fragmentName}}</b> &nbsp; <sup>{{item.author}}, {{item.text}}, {{item.editor}}</sup> &nbsp; <i>{{item.status}}</i>
                            </div>
                            <div *ngFor="let item2 of item.content"> 
                                <!-- Keep in mind whether a note is printed or not. -->
                                <div class="divNote" *ngIf="item.note" [innerHTML]="item2.lineComplete"></div> 
                                <div *ngIf="item.note != true" [innerHTML]="item2.lineComplete"></div> 
                            </div>  
                        </div>   
                    </div>
                </div> 
            </div> 

            <!-- The third column contains two rows: one for own fragments, one for existing editions -->
            <div class="col-md-4">
                <div class="row">
                    <div class="multiplayer-container">
                        <h3>Recycle Bin</h3>
                        <div
                            cdkDropList
                            #list5="cdkDropList"
                            [cdkDropListData]="this.multiplayer.list5Array"
                            [cdkDropListConnectedTo]="[list1, list2, list3, list4, list6]"
                            class="multiplayer-list"
                            (cdkDropListDropped)="this.multiplayer.MultipleColumnsDrag($event)">
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="multiplayer-container">
                        <h3>My Notebook</h3>
                        <div
                            cdkDropList
                            #list4="cdkDropList"
                            [cdkDropListData]="this.multiplayer.list4Array"
                            [cdkDropListConnectedTo]="[list1, list2, list3, list5, list6]"
                            class="multiplayer-list"
                            (cdkDropListDropped)="this.multiplayer.MultipleColumnsDrag($event)">
                            <div class="fragment-box" *ngFor="let item of this.multiplayer.list4Array" cdkDrag>                          
                                <div class="divNote" *ngIf="item.note"> <!--If it is a note, don't show frg-->
                                    <b>{{item.fragmentName}}</b>
                                </div>
                                <div *ngIf="item.note != true && this.multiplayer.showFragmentname">
                                    <b>Frg {{item.fragmentName}}</b> &nbsp; <sup>{{item.author}}, {{item.text}}, {{item.editor}}</sup> &nbsp; <i>{{item.status}}</i>
                                </div>
                                <div *ngFor="let item2 of item.content"> 
                                    <!-- Keep in mind whether a note is printed or not. -->
                                    <div class="divNote" *ngIf="item.note" [innerHTML]="item2.lineComplete"></div> 
                                    <div *ngIf="item.note != true" [innerHTML]="item2.lineComplete"></div> 
                                </div>  
                            </div>  
                        </div>
                    </div>
                </div>
                <!-- Last list that shows existing editions -->
                <div class="row">
                    <div class="multiplayer-container">
                        <h3>Existing Edition</h3>
                        <div
                            cdkDropList
                            #list3="cdkDropList"
                            [cdkDropListData]="this.multiplayer.list3Array"
                            [cdkDropListConnectedTo]="[list1, list2, list4, list5, list6]"
                            class="multiplayer-list"
                            (cdkDropListDropped)="this.multiplayer.MultipleColumnsDrag($event)">
                            <div class="fragment-box" *ngFor="let item of this.multiplayer.list3Array" cdkDrag>                          
                                <div class="divNote" *ngIf="item.note"> <!--If it is a note, don't show frg-->
                                    <b>{{item.fragmentName}}</b>
                                </div>
                                <div *ngIf="item.note != true && this.multiplayer.showFragmentname">
                                    <b>Frg {{item.fragmentName}}</b> &nbsp; <sup>{{item.author}}, {{item.text}}, {{item.editor}}</sup> &nbsp; <i>{{item.status}}</i>
                                </div>
                                <div *ngFor="let item2 of item.content"> 
                                    <!-- Keep in mind whether a note is printed or not. -->
                                    <div class="divNote" *ngIf="item.note" [innerHTML]="item2.lineComplete"></div> 
                                    <div *ngIf="item.note != true" [innerHTML]="item2.lineComplete"></div> 
                                </div>  
                            </div> 
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div> 